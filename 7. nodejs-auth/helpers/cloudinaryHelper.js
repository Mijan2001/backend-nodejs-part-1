const cloudinary = require('../config/cloudinary');

const uploadToCloudinary = async filePath => {
    try {
        const result = await cloudinary.uploader.upload(filePath);

        return {
            url: result.secure_url,
            publicId: result.public_id
        };
    } catch (error) {
        console.error('Error while uploading to cloudinary', error);
        throw new Error('Error while uploading to cloudinary');
    }
};

module.exports = {
    uploadToCloudinary
};

/*
 Cloudinary File Upload тАУ ржбржХрзБржорзЗржирзНржЯрзЗрж╢ржи
ЁЯОп ржЙржжрзНржжрзЗрж╢рзНржп:
ржПржЗ ржоржбрж┐ржЙрж▓ржЯрж┐ Cloudinary ржХрзНрж▓рж╛ржЙржб рж╕рж╛рж░рзНржнрж┐рж╕рзЗ ржлрж╛ржЗрж▓ (ржЫржмрж┐, ржнрж┐ржбрж┐ржУ ржЗрждрзНржпрж╛ржжрж┐) ржЖржкрж▓рзЛржб ржХрж░рж╛рж░ ржЬржирзНржп рждрзИрж░рж┐ред ржПржЯрж┐ рж▓рзЛржХрж╛рж▓ ржлрж╛ржЗрж▓рзЗрж░ filePath ржЗржиржкрзБржЯ рж╣рж┐рж╕рзЗржмрзЗ ржирж┐рзЯрзЗ ржХрзНрж▓рж╛ржЙржбрзЗ ржЖржкрж▓рзЛржб ржХрж░рзЗ рждрж╛рж░ URL ржПржмржВ public ID рж░рж┐ржЯрж╛рж░рзНржи ржХрж░рзЗред

тЬЕ 1. Cloudinary ржХржиржлрж┐ржЧрж╛рж░рзЗрж╢ржи ржЗржоржкрзЛрж░рзНржЯ
js
Copy
Edit
const cloudinary = require('../config/cloudinary');
ржмрзНржпрж╛ржЦрзНржпрж╛:
ржПржЦрж╛ржирзЗ ржЖржорж░рж╛ Cloudinary-ржПрж░ рж╕рзЗржЯржЖржк ржХрж░рж╛ ржХржиржлрж┐ржЧрж╛рж░рзЗрж╢ржи ржлрж╛ржЗрж▓ ржЗржоржкрзЛрж░рзНржЯ ржХрж░рзЗржЫрж┐ред
ржП ржлрж╛ржЗрж▓рзЗрж░ ржоржзрзНржпрзЗ API credentials ржПржмржВ .config() ржлрж╛ржВрж╢ржи ржерж╛ржХржмрзЗред

ЁЯЪА 2. Cloudinary-рждрзЗ ржЖржкрж▓рзЛржб ржХрж░рж╛рж░ ржлрж╛ржВрж╢ржи
js
Copy
Edit
const uploadToCloudinary = async filePath => {
ржмрзНржпрж╛ржЦрзНржпрж╛:
uploadToCloudinary() рж╣рж▓ ржПржХржЯрж┐ asynchronous ржлрж╛ржВрж╢ржи, ржпрж╛ рж▓рзЛржХрж╛рж▓ ржлрж╛ржЗрж▓ ржкрж╛рже ржЗржиржкрзБржЯ рж╣рж┐рж╕рзЗржмрзЗ ржирзЗрзЯред

тШБя╕П 3. Cloudinary-рждрзЗ ржЖржкрж▓рзЛржб ржХрж░рж╛
js
Copy
Edit
const result = await cloudinary.uploader.upload(filePath);
ржмрзНржпрж╛ржЦрзНржпрж╛:
Cloudinary-ржПрж░ uploader.upload() ржлрж╛ржВрж╢ржи ржмрзНржпржмрж╣рж╛рж░ ржХрж░рзЗ ржлрж╛ржЗрж▓ржЯрж┐ ржХрзНрж▓рж╛ржЙржбрзЗ ржЖржкрж▓рзЛржб ржХрж░рж╛ рж╣рзЯред
ржПржЯрж┐ ржПржХржЯрж┐ Promise рж░рж┐ржЯрж╛рж░рзНржи ржХрж░рзЗ, рждрж╛ржЗ await ржмрзНржпржмрж╣рж╛рж░ ржХрж░рж╛ рж╣рзЯрзЗржЫрзЗред

ЁЯФБ 4. ржЖржкрж▓рзЛржб рж░рзЗржЬрж╛рж▓рзНржЯ ржерзЗржХрзЗ рждржерзНржп рж░рж┐ржЯрж╛рж░рзНржи ржХрж░рж╛
js
Copy
Edit
return {
    url: result.secure_url,
    publicId: result.public_id
};
ржмрзНржпрж╛ржЦрзНржпрж╛:
рж╕ржлрж▓ржнрж╛ржмрзЗ ржЖржкрж▓рзЛржб рж╣рж▓рзЗ, ржлрж╛ржВрж╢ржиржЯрж┐ ржжрзБржЯрж┐ рждржерзНржп рж░рж┐ржЯрж╛рж░рзНржи ржХрж░рзЗ:

secure_url: ржХрзНрж▓рж╛ржЙржбрзЗ ржЖржкрж▓рзЛржб рж╣ржУрзЯрж╛ ржлрж╛ржЗрж▓рзЗрж░ https URLред

public_id: Cloudinary ржПрж░ ржнрж┐рждрж░рзЗ ржлрж╛ржЗрж▓ржЯрж┐рж░ unique IDред

тЪая╕П 5. Error Handling (ржнрзБрж▓ ржзрж░рж╛рж░ ржмрзНржпржмрж╕рзНржерж╛)
js
Copy
Edit
} catch (error) {
    console.error('Error while uploading to cloudinary', error);
    throw new Error('Error while uploading to cloudinary');
}
ржмрзНржпрж╛ржЦрзНржпрж╛:
ржпржжрж┐ ржЖржкрж▓рзЛржб ржХрж░рж╛рж░ рж╕ржорзЯ ржХрзЛржирзЛ рж╕ржорж╕рзНржпрж╛ рж╣рзЯ, рждрж╛рж╣рж▓рзЗ рждрж╛ catch ржмрзНрж▓ржХрзЗ ржзрж░рж╛ рж╣ржмрзЗред
ржПржЦрж╛ржирзЗ console.error ржжрж┐рзЯрзЗ error ржжрзЗржЦрж╛ржирзЛ рж╣рзЯ ржПржмржВ throw ржХрж░рзЗ ржлрж╛ржВрж╢ржи ржмрзНржпрж░рзНрже ржмрж▓рзЗ ржШрзЛрж╖ржгрж╛ ржХрж░рж╛ рж╣рзЯред

ЁЯУж 6. Module Export ржХрж░рж╛
js
Copy
Edit
module.exports = {
    uploadToCloudinary
};
ржмрзНржпрж╛ржЦрзНржпрж╛:
ржПржЗ ржлрж╛ржВрж╢ржиржЯрж┐ ржЕржирзНржп ржлрж╛ржЗрж▓рзЗ ржмрзНржпржмрж╣рж╛рж░ ржХрж░рж╛рж░ ржЬржирзНржп ржПржХрзНрж╕ржкрзЛрж░рзНржЯ ржХрж░рж╛ рж╣ржЪрзНржЫрзЗред

тЬЕ рж╕рж╛рж░рж╕ржВржХрзНрж╖рзЗржк ржЯрзЗржмрж┐рж▓:
рж▓рж╛ржЗржи	ржХрж╛ржЬ
require('../config/cloudinary')	Cloudinary ржХржиржлрж┐ржЧрж╛рж░рзЗрж╢ржи ржЗржоржкрзЛрж░рзНржЯ ржХрж░рзЗ
uploadToCloudinary(filePath)	рж▓рзЛржХрж╛рж▓ ржлрж╛ржЗрж▓ ржХрзНрж▓рж╛ржЙржбрзЗ ржЖржкрж▓рзЛржб ржХрж░рж╛рж░ ржлрж╛ржВрж╢ржи
cloudinary.uploader.upload()	ржлрж╛ржЗрж▓ ржХрзНрж▓рж╛ржЙржбрзЗ ржЖржкрж▓рзЛржб ржХрж░рзЗ
secure_url	ржХрзНрж▓рж╛ржЙржб ржлрж╛ржЗрж▓рзЗрж░ public https рж▓рж┐ржВржХ
public_id	Cloudinary рждрзЗ ржлрж╛ржЗрж▓рзЗрж░ unique ржЖржЗржбрж┐
catch block	Error рж╣рж▓рзЗ рждрж╛ ржзрж░рзЗ ржПржмржВ ржорзЗрж╕рзЗржЬ ржжрзЗрзЯ
module.exports	ржлрж╛ржВрж╢ржиржЯрж┐ ржмрж╛ржЗрж░рзЗ ржмрзНржпржмрж╣рж╛рж░рзЗрж░ ржЬржирзНржп ржЙржирзНржорзБржХрзНржд ржХрж░рзЗ
*/
